{
  "id": "api/common/http/HttpInterceptor",
  "title": "HttpInterceptor",
  "contents": "\n\n<article>\n  <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/common/http/src/interceptor.ts?message=docs(common)%3A%20describe%20your%20change...#L15-L60\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/common/http/src/interceptor.ts#L15-L60\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/common/http\", \"name\": \"@angular/common/http\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/common/http/HttpInterceptor\", \"name\": \"HttpInterceptor\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/common/http\">@angular/common/http</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"httpinterceptor\">HttpInterceptor<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#httpinterceptor\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\">Intercepts <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> and handles them.</p>\n<p translation-result=\"\">拦截 <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> 并处理它们。</p>\n<p></p>\n  \n\n  \n\n  <section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/common/http/HttpInterceptor\" class=\"code-anchor\">HttpInterceptor</a> {\n  <a class=\"code-anchor\" href=\"api/common/http/HttpInterceptor#intercept\">intercept(req: HttpRequest&#x3C;any>, next: HttpHandler): Observable&#x3C;HttpEvent&#x3C;any>></a>\n}\n</code-example>\n\n  \n  \n\n\n  \n  \n\n</section>\n\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-origin=\"off\">Most interceptors will transform the outgoing request before passing it to the\nnext interceptor in the chain, by calling <code>next.handle(transformedReq)</code>.</p>\n<p translation-result=\"\">大多数拦截器都会在外发的请求由 <code>next.handle(transformedReq)</code> 发给拦截器链中的下一个拦截器之前，对该请求进行转换。</p>\n<p translation-origin=\"off\">In rare cases, interceptors may wish to completely handle a request themselves,\nand not delegate to the remainder of the chain. This behavior is allowed.</p>\n<p translation-result=\"\">极少量情况下，拦截器也可能希望自己完全处理一个请求，而不再委托给拦截器链中的其它部分。这种行为也是允许的。</p>\n\n</section>\n\n\n  \n\n\n  \n\n<section class=\"instance-methods\">\n  <h2 id=\"方法\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#方法\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"intercept\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"intercept\">\n        intercept()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#intercept\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/common/http/src/interceptor.ts?message=docs(common)%3A%20describe%20your%20change...#L33-L59\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/common/http/src/interceptor.ts#L33-L59\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-origin=\"off\">Intercept an outgoing <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> and optionally transform it or the\nresponse.</p>\n<p translation-result=\"\">拦截外发的 <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code>，并（可选的）转换它或转换响应对象。</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\">intercept(req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&#x3C;any>, next: <a href=\"api/common/http/HttpHandler\" class=\"code-anchor\">HttpHandler</a>): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;any>></code-example>\n\n<h4 class=\"no-anchor\" id=\"参数\">参数</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>req</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a><any></any></code>.</p>\n      \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>next</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code><a href=\"api/common/http/HttpHandler\" class=\"code-anchor\">HttpHandler</a></code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n<p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;any>></code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p translation-origin=\"off\">Typically an interceptor will transform the outgoing request before returning\n<code>next.handle(transformedReq)</code>. An interceptor may choose to transform the\nresponse event stream as well, by applying additional Rx operators on the stream\nreturned by <code>next.handle()</code>.</p>\n<p translation-result=\"\">通常，拦截器将会在返回 <code>next.handle(transformedReq)</code> 之前转换外发请求。\n选择器也可以选择通过在 <code>next.handle()</code> 返回的流上应用 Rx 操作符（operator）来转换响应事件流。</p>\n<p translation-origin=\"off\">More rarely, an interceptor may choose to completely handle the request itself,\nand compose a new event stream instead of invoking <code>next.handle()</code>. This is\nacceptable behavior, but keep in mind further interceptors will be skipped entirely.</p>\n<p translation-result=\"\">更罕见的情况下，拦截器可以选择完全由自己处理该请求，并合成新的事件流而不是调用 <code>next.handle()</code>。\n这种方式也是可以接受的，不过要记住这样做会完全忽略所有的后续拦截器。</p>\n<p translation-origin=\"off\">It is also rare but valid for an interceptor to return multiple responses on the\nevent stream for a single request.</p>\n<p translation-result=\"\">另一种同样罕见但是有用的拦截器，会为单个请求在事件流上给出多个响应对象。</p>\n\n      </td>\n    </tr>\n\n  \n    </tbody>\n</table>\n\n  \n</section>\n\n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/common/http\n - api/common/http/HTTP_INTERCEPTORS\n - api/common/http/HttpHandler\n - api/common/http/JsonpInterceptor\n - guide/http\n-->\n<!-- links from this doc:\n - /api\n - api/common/http\n - api/common/http/HttpEvent\n - api/common/http/HttpHandler\n - api/common/http/HttpInterceptor#description\n - api/common/http/HttpInterceptor#httpinterceptor\n - api/common/http/HttpInterceptor#intercept\n - api/common/http/HttpInterceptor#方法\n - api/common/http/HttpRequest\n - https://github.com/angular/angular/edit/master/packages/common/http/src/interceptor.ts?message=docs(common)%3A%20describe%20your%20change...#L15-L60\n - https://github.com/angular/angular/edit/master/packages/common/http/src/interceptor.ts?message=docs(common)%3A%20describe%20your%20change...#L33-L59\n - https://github.com/angular/angular/tree/6.1.0/packages/common/http/src/interceptor.ts#L15-L60\n - https://github.com/angular/angular/tree/6.1.0/packages/common/http/src/interceptor.ts#L33-L59\n-->"
}