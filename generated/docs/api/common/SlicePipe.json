{
  "id": "api/common/SlicePipe",
  "title": "SlicePipe",
  "contents": "\n\n<article>\n  <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/common/src/pipes/slice_pipe.ts?message=docs(common)%3A%20describe%20your%20change...#L11-L117\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/common/src/pipes/slice_pipe.ts#L11-L117\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/common\", \"name\": \"@angular/common\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/common/SlicePipe\", \"name\": \"SlicePipe\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/common\">@angular/common</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"slicepipe\">SlicePipe<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/SlicePipe#slicepipe\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label pipe\">pipe</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    <label class=\"api-status-label impure-pipe\">非纯管道</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\">Creates a new <code>Array</code> or <code>String</code> containing a subset (slice) of the elements.</p>\n<p translation-result=\"\">从一个 <code>Array</code> 或 <code>String</code> 中创建其元素一个新子集（slice）。</p>\n<p></p>\n  \n\n  \n\n  \n<section class=\"pipe-overview\">\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">{{ value_expression | <span class=\"kwd nocode\">slice</span> : start [ : end ] }}</code-example>\n\n  \n  <h2 id=\"input-value\">输入值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/SlicePipe#input-value\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table parameters-table pipe-parameters\">\n  <tbody>\n  \n    <tr class=\"pipe-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>value</td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-origin=\"off\">a list or a string to be sliced.</p>\n<p translation-result=\"\">要截取的列表或字符串。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  \n  \n  <h2 id=\"parameters\">参数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/SlicePipe#parameters\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table parameters-table pipe-parameters\">\n  <tbody>\n  \n    <tr class=\"pipe-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>start</td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n      <p translation-origin=\"off\">the starting index of the subset to return:</p>\n<p translation-result=\"\">要返回的子集的初始索引：</p>\n<ul>\n<li>\n<p translation-origin=\"off\"><strong>a positive integer</strong>: return the item at <code>start</code> index and all items after\nin the list or string expression.</p>\n<p translation-result=\"\"><strong>一个正整数</strong>：从列表或字符串表达式中返回从 <code>start</code> 索引处及之后的所有条目。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><strong>a negative integer</strong>: return the item at <code>start</code> index from the end and all items after\nin the list or string expression.</p>\n<p translation-result=\"\"><strong>一个负整数</strong>：从列表或字符串表达式中返回从结尾开始的第 <code>start</code> 索引处及之后的所有条目。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><strong>if positive and greater than the size of the expression</strong>: return an empty list or\nstring.</p>\n<p translation-result=\"\">    <strong>如果是正数而且大于表达式的条目数</strong>：返回空列表或空字符串。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><strong>if negative and greater than the size of the expression</strong>: return entire list or string.</p>\n<p translation-result=\"\"><strong>如果是复数而且大于表达式的条目数</strong>：返回整个列表或字符串。</p>\n</li>\n</ul>\n\n      </td>\n    </tr>\n    <tr class=\"pipe-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>end</td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n      <p translation-origin=\"off\">the ending index of the subset to return:</p>\n<p translation-result=\"\">所要返回的子集的结尾索引：</p>\n<ul>\n<li>\n<p translation-origin=\"off\"><strong>omitted</strong>: return all items until the end.</p>\n<p translation-result=\"\"><strong>省略</strong>：返回结尾之前的全部条目。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><strong>if positive</strong>: return all items before <code>end</code> index of the list or string.</p>\n<p translation-result=\"\"><strong>如果为正数</strong>：从列表或字符串中返回 <code>end</code> 索引之前的所有条目。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><strong>if negative</strong>: return all items before <code>end</code> index from the end of the list or string.</p>\n<p translation-result=\"\"><strong>如果为负数</strong>：从列表或字符串中返回 <code>end</code> 索引之前的所有条目。\n</p>\n</li>\n</ul>\n<p translation-result=\"\">      可选. 默认值是 <code>undefined</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  \n</section>\n\n\n  \n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/SlicePipe#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-origin=\"off\">All behavior is based on the expected behavior of the JavaScript API <code>Array.prototype.slice()</code>\nand <code>String.prototype.slice()</code>.</p>\n<p translation-result=\"\">所有行为都基于 JavaScript API <code>Array.prototype.slice()</code> 和 <code>String.prototype.slice()</code> 的预期行为。</p>\n<p translation-origin=\"off\">When operating on an <code>Array</code>, the returned <code>Array</code> is always a copy even when all\nthe elements are being returned.</p>\n<p translation-result=\"\">当操作 <code>Array</code> 时，返回的 <code>Array</code> 始终是一个副本 —— 即使返回了所有元素也是一样。</p>\n<p translation-origin=\"off\">When operating on a blank value, the pipe returns the blank value.</p>\n<p translation-result=\"\">当操作空白值时，该管道也会返回空白值。</p>\n<h3 translation-origin=\"off\" id=\"list-example\">List Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/SlicePipe#list-example\"><i class=\"material-icons\">link</i></a></h3>\n<h3 translation-result=\"\" id=\"list-example\">列表范例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/SlicePipe#list-example\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">This <code><a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a></code> example:</p>\n<p translation-result=\"\"><code><a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a></code> 例子：</p>\n<code-example>\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'slice-list-pipe',\n  <a href=\"api/core/Component#template\" class=\"code-anchor\">template</a>: `&#x3C;ul>\n    &#x3C;li *<a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a>=\"let i of <a href=\"api/core/DefaultIterableDiffer#collection\" class=\"code-anchor\">collection</a> | <a href=\"api/common/SlicePipe\" class=\"code-anchor\">slice</a>:1:3\">{{i}}&#x3C;/li>\n  &#x3C;/ul>`\n})\nexport class SlicePipeListComponent {\n  <a href=\"api/core/DefaultIterableDiffer#collection\" class=\"code-anchor\">collection</a>: string[] = ['<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>', 'b', 'c', 'd'];\n}\n\n</code-example>\n<p translation-origin=\"off\">produces the following:</p>\n<p translation-result=\"\">生成下列内容：</p>\n    <li>b</li>\n    <li>c</li>\n<h2 translation-origin=\"off\" id=\"string-examples\">String Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/SlicePipe#string-examples\"><i class=\"material-icons\">link</i></a></h2>\n<h2 translation-result=\"\" id=\"string-examples\">字符串范例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/SlicePipe#string-examples\"><i class=\"material-icons\">link</i></a></h2>\n<code-example>\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'slice-string-pipe',\n  <a href=\"api/core/Component#template\" class=\"code-anchor\">template</a>: `&#x3C;div>\n    &#x3C;p>{{str}}[0:4]: '{{str | <a href=\"api/common/SlicePipe\" class=\"code-anchor\">slice</a>:0:4}}' - output is expected to be 'abcd'&#x3C;/p>\n    &#x3C;p>{{str}}[4:0]: '{{str | <a href=\"api/common/SlicePipe\" class=\"code-anchor\">slice</a>:4:0}}' - output is expected to be ''&#x3C;/p>\n    &#x3C;p>{{str}}[-4]: '{{str | <a href=\"api/common/SlicePipe\" class=\"code-anchor\">slice</a>:-4}}' - output is expected to be 'ghij'&#x3C;/p>\n    &#x3C;p>{{str}}[-4:-2]: '{{str | <a href=\"api/common/SlicePipe\" class=\"code-anchor\">slice</a>:-4:-2}}' - output is expected to be 'gh'&#x3C;/p>\n    &#x3C;p>{{str}}[-100]: '{{str | <a href=\"api/common/SlicePipe\" class=\"code-anchor\">slice</a>:-100}}' - output is expected to be 'abcdefghij'&#x3C;/p>\n    &#x3C;p>{{str}}[100]: '{{str | <a href=\"api/common/SlicePipe\" class=\"code-anchor\">slice</a>:100}}' - output is expected to be ''&#x3C;/p>\n  &#x3C;/div>`\n})\nexport class SlicePipeStringComponent {\n  str: string = 'abcdefghij';\n}\n\n</code-example>\n\n</section>\n\n\n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/common\n - guide/ajs-quick-reference\n-->\n<!-- links from this doc:\n - /api\n - api/common\n - api/common/NgForOf\n - api/common/SlicePipe#description\n - api/common/SlicePipe#input-value\n - api/common/SlicePipe#list-example\n - api/common/SlicePipe#parameters\n - api/common/SlicePipe#slicepipe\n - api/common/SlicePipe#string-examples\n - api/core/Component\n - api/core/Component#template\n - api/core/DefaultIterableDiffer#collection\n - api/router/RouterLinkWithHref\n - https://github.com/angular/angular/edit/master/packages/common/src/pipes/slice_pipe.ts?message=docs(common)%3A%20describe%20your%20change...#L11-L117\n - https://github.com/angular/angular/tree/6.1.0/packages/common/src/pipes/slice_pipe.ts#L11-L117\n-->"
}