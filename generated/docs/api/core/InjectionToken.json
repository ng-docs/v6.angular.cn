{
  "id": "api/core/InjectionToken",
  "title": "InjectionToken",
  "contents": "\n\n<article>\n  <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/di/injection_token.ts?message=docs(core)%3A%20describe%20your%20change...#L12-L70\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/core/src/di/injection_token.ts#L12-L70\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/InjectionToken\", \"name\": \"InjectionToken\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/core\">@angular/core</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"injectiontoken\">InjectionToken<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectionToken#injectiontoken\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\">Creates a token that can be used in a DI Provider.</p>\n<p></p>\n  \n\n  \n\n  \n  <section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\">\nclass <a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a>&#x3C;T> {\n  <a class=\"code-anchor\" href=\"api/core/InjectionToken#constructor()\">constructor(_desc: string, options?: {...})</a>\n  <a class=\"code-anchor\" href=\"api/core/InjectionToken#ngInjectableDef\">get ngInjectableDef: never | undefined</a>\n  <a class=\"code-anchor\" href=\"api/core/InjectionToken#_desc\">protected _desc: string</a>\n  <a class=\"code-anchor\" href=\"api/core/InjectionToken#toString\">toString(): string</a>\n}\n</code-example>\n\n  \n  \n\n</section>\n\n\n  \n\n  \n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectionToken#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-origin=\"off\">Use an <code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code> whenever the type you are injecting is not reified (does not have a\nruntime representation) such as when injecting an interface, callable type, array or\nparametrized type.</p>\n<p translation-origin=\"off\"><code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code> is parameterized on <code>T</code> which is the type of object which will be returned by\nthe <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>. This provides additional level of type safety.</p>\n<code-example>\ninterface MyInterface {...}\nvar myInterface = injector.get(new <a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a>&#x3C;MyInterface>('SomeToken'));\n// myInterface is inferred to be MyInterface.\n</code-example>\n<p translation-origin=\"off\">When creating an <code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code>, you can optionally specify a factory function which returns\n(possibly by creating) a default value of the parameterized type <code>T</code>. This sets up the\n<code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code> using this factory as a provider as if it was defined explicitly in the\napplication's root injector. If the factory function, which takes zero arguments, needs to inject\ndependencies, it can do so using the <code>inject</code> function. See below for an example.</p>\n<p translation-origin=\"off\">Additionally, if a <code><a href=\"api/core/ResolvedReflectiveFactory#factory\" class=\"code-anchor\">factory</a></code> is specified you can also specify the <code><a href=\"api/core/Injectable#providedIn\" class=\"code-anchor\">providedIn</a></code> option, which\noverrides the above behavior and marks the token as belonging to a particular <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>. As\nmentioned above, <code>'root'</code> is the default value for <code><a href=\"api/core/Injectable#providedIn\" class=\"code-anchor\">providedIn</a></code>.</p>\n\n</section>\n\n\n  \n\n\n  \n\n  \n  <h2 id=\"constructor\">构造函数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectionToken#constructor\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"constructor()\"></a>\n<table class=\"is-full-width method-table constructor\">\n  \n  <tbody>\n    \n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\">constructor(<a href=\"api/core/InjectionToken#_desc\" class=\"code-anchor\">_desc</a>: string, options?: {\n    <a href=\"api/core/Injectable#providedIn\" class=\"code-anchor\">providedIn</a>?: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;any> | 'root' | null;\n    <a href=\"api/core/ResolvedReflectiveFactory#factory\" class=\"code-anchor\">factory</a>: () => T;\n})</code-example>\n\n<h4 class=\"no-anchor\" id=\"参数\">参数</h4>\n<table class=\"is-full-width list-table parameters-table constructor-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>_desc</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code>string</code>.</p>\n      \n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>options</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code>{\n    <a href=\"api/core/Injectable#providedIn\" class=\"code-anchor\">providedIn</a>?: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a><any> | 'root' | null;\n    factory: () => T;\n}</any></code>.</p>\n      \n<p translation-result=\"\">      可选. 默认值是 <code>undefined</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n\n  \n\n<section class=\"instance-properties\">\n  <h2 id=\"属性\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectionToken#属性\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性名</th>\n        <th>类型</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"ngInjectableDef\"></a>ngInjectableDef</td>\n        <td><label class=\"property-type-label\"><code>never | undefined</code></label></td>\n        <td><span class=\"read-only-property\">只读</span>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"_desc\"></a>_desc</td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          \n          \n           <span class=\"from-constructor\">声明于构造函数中</span>\n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n  \n\n<section class=\"instance-methods\">\n  <h2 id=\"方法\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectionToken#方法\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"toString\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"tostring\">\n        toString()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectionToken#tostring\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/di/injection_token.ts?message=docs(core)%3A%20describe%20your%20change...#L68-L69\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/core/src/di/injection_token.ts#L68-L69\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\">toString(): string</code-example>\n\n<h4 class=\"no-anchor\" id=\"参数-1\">参数</h4>\n<p>没有参数。</p>\n\n\n<h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n<p translation-origin=\"off\"><code>string</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n</section>\n\n\n  \n\n\n  \n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectionToken#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 translation-origin=\"off\" id=\"basic-example\">Basic Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectionToken#basic-example\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\nconst BASE_URL = new <a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a>&#x3C;string>('BaseUrl');\nconst injector =\n    ReflectiveInjector.resolveAndCreate([{provide: BASE_URL, useValue: 'http://localhost'}]);\nconst url = injector.get(BASE_URL);\n// here `url` is inferred to be `string` because `BASE_URL` is `<a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a>&#x3C;string>`.\nexpect(url).toBe('http://localhost');\n\n</code-example>\n<h3 translation-origin=\"off\" id=\"tree-shakeable-example\">Tree-shakeable Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectionToken#tree-shakeable-example\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\nclass MyService {\n  constructor(readonly myDep: MyDep) {}\n}\n\nconst MY_SERVICE_TOKEN = new <a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a>&#x3C;MyService>('Manually constructed MyService', {\n  <a href=\"api/core/Injectable#providedIn\" class=\"code-anchor\">providedIn</a>: 'root',\n  <a href=\"api/core/ResolvedReflectiveFactory#factory\" class=\"code-anchor\">factory</a>: () => new MyService(inject(MyDep)),\n});\n\nconst instance = injector.get(MY_SERVICE_TOKEN);\nexpect(instance instanceof MyService).toBeTruthy();\nexpect(instance.myDep instanceof MyDep).toBeTruthy();\n\n</code-example>\n\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/common/APP_BASE_HREF\n - api/common/DOCUMENT\n - api/common/LOCATION_INITIALIZED\n - api/common/http/HTTP_INTERCEPTORS\n - api/core\n - api/core/ANALYZE_FOR_ENTRY_COMPONENTS\n - api/core/APP_BOOTSTRAP_LISTENER\n - api/core/APP_ID\n - api/core/APP_INITIALIZER\n - api/core/COMPILER_OPTIONS\n - api/core/ClassProvider\n - api/core/ExistingProvider\n - api/core/FactoryProvider\n - api/core/INJECTOR\n - api/core/LOCALE_ID\n - api/core/PACKAGE_ROOT_URL\n - api/core/PLATFORM_ID\n - api/core/PLATFORM_INITIALIZER\n - api/core/TRANSLATIONS\n - api/core/TRANSLATIONS_FORMAT\n - api/core/ValueProvider\n - api/core/inject\n - api/core/testing/ComponentFixtureAutoDetect\n - api/core/testing/ComponentFixtureNoNgZone\n - api/forms\n - api/forms/COMPOSITION_BUFFER_MODE\n - api/forms/NG_ASYNC_VALIDATORS\n - api/forms/NG_VALIDATORS\n - api/forms/NG_VALUE_ACCESSOR\n - api/platform-browser/DOCUMENT\n - api/platform-browser/EVENT_MANAGER_PLUGINS\n - api/platform-browser/HAMMER_GESTURE_CONFIG\n - api/platform-browser/HAMMER_LOADER\n - api/platform-browser/animations/ANIMATION_MODULE_TYPE\n - api/platform-server/BEFORE_APP_SERIALIZED\n - api/platform-server/INITIAL_CONFIG\n - api/router/ROUTER_CONFIGURATION\n - api/router/ROUTER_INITIALIZER\n - api/router/ROUTES\n - api/router/upgrade/RouterUpgradeInitializer\n - api/upgrade/static/downgradeInjectable\n - guide/aot-compiler\n - guide/dependency-injection\n - guide/dependency-injection-in-action\n - guide/ngmodule-faq\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/Injectable#providedIn\n - api/core/InjectionToken#_desc\n - api/core/InjectionToken#basic-example\n - api/core/InjectionToken#constructor\n - api/core/InjectionToken#constructor()\n - api/core/InjectionToken#description\n - api/core/InjectionToken#injectiontoken\n - api/core/InjectionToken#ngInjectableDef\n - api/core/InjectionToken#toString\n - api/core/InjectionToken#tostring\n - api/core/InjectionToken#tree-shakeable-example\n - api/core/InjectionToken#usage-notes\n - api/core/InjectionToken#属性\n - api/core/InjectionToken#方法\n - api/core/Injector\n - api/core/NgModule\n - api/core/ResolvedReflectiveFactory#factory\n - api/core/Type\n - https://github.com/angular/angular/edit/master/packages/core/src/di/injection_token.ts?message=docs(core)%3A%20describe%20your%20change...#L12-L70\n - https://github.com/angular/angular/edit/master/packages/core/src/di/injection_token.ts?message=docs(core)%3A%20describe%20your%20change...#L68-L69\n - https://github.com/angular/angular/tree/6.1.0/packages/core/src/di/injection_token.ts#L12-L70\n - https://github.com/angular/angular/tree/6.1.0/packages/core/src/di/injection_token.ts#L68-L69\n-->"
}