{
  "id": "api/forms/NgModel",
  "title": "NgModel",
  "contents": "\n\n<article>\n  <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/forms/src/directives/ng_model.ts?message=docs(forms)%3A%20describe%20your%20change...#L62-L337\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/forms/src/directives/ng_model.ts#L62-L337\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/forms\", \"name\": \"@angular/forms\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/forms/NgModel\", \"name\": \"NgModel\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/forms\">@angular/forms</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"ngmodel\">NgModel<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/NgModel#ngmodel\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label directive\">directive</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\">Creates a <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> instance from a domain model and binds it\nto a form control element.</p>\n<p translation-result=\"\">根据领域对象创建一个 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 实例，并把它绑定到一个表单控件元素上。</p>\n<p></p>\n  \n\n  \n\n  <section class=\"directive-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n    selector: '[<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>]:not([<a href=\"api/forms/FormControlName\" class=\"code-anchor\">formControlName</a>]):not([formControl])',\n    providers: [formControlBinding],\n    <a href=\"api/core/Directive#exportAs\" class=\"code-anchor\">exportAs</a>: '<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>'\n})\nclass <a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a> extends <a class=\"code-anchor\" href=\"api/forms/NgControl\">NgControl</a> implements <a class=\"code-anchor\" href=\"api/core/OnChanges\">OnChanges</a>, <a class=\"code-anchor\" href=\"api/core/OnDestroy\">OnDestroy</a> {\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#control\">get control: FormControl</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#viewModel\">viewModel: any</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#name\">name: string</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#isDisabled\">isDisabled: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#model\">model: any</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#options\">options: {...}</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#update\">update: new EventEmitter()</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#path\">get path: string[]</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#formDirective\">get formDirective: any</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#validator\">get validator: ValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#asyncValidator\">get asyncValidator: AsyncValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#ngOnChanges\">ngOnChanges(changes: SimpleChanges)</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#ngOnDestroy\">ngOnDestroy(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgModel#viewToModelUpdate\">viewToModelUpdate(newValue: any): void</a>\n\n  // 继承自 <a class=\"code-anchor\" href=\"api/forms/NgControl\">forms/NgControl</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgControl#name\">name: string | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgControl#valueAccessor\">valueAccessor: ControlValueAccessor | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgControl#validator\">get validator: ValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgControl#asyncValidator\">get asyncValidator: AsyncValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/NgControl#viewToModelUpdate\">abstract viewToModelUpdate(newValue: any): void</a>\n\n  // 继承自 <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective\">forms/AbstractControlDirective</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#control\">abstract get control: AbstractControl | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#value\">get value: any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#valid\">get valid: boolean | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#invalid\">get invalid: boolean | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#pending\">get pending: boolean | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#disabled\">get disabled: boolean | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#enabled\">get enabled: boolean | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#errors\">get errors: ValidationErrors | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#pristine\">get pristine: boolean | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#dirty\">get dirty: boolean | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#touched\">get touched: boolean | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#status\">get status: string | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#untouched\">get untouched: boolean | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#statusChanges\">get statusChanges: Observable&#x3C;any> | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#valueChanges\">get valueChanges: Observable&#x3C;any> | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#path\">get path: string[] | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#reset\">reset(value: any = undefined): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#hasError\">hasError(errorCode: string, path?: string[]): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControlDirective#getError\">getError(errorCode: string, path?: string[]): any</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n  \n<section class=\"selectors\">\n  <h2 id=\"selectors\">选择器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/NgModel#selectors\"><i class=\"material-icons\">link</i></a></h2>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading selector\">\n  [<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>]:not([<a href=\"api/forms/FormControlName\" class=\"code-anchor\">formControlName</a>]):not([formControl])\n  </code-example>\n</section>\n\n\n  \n<section class=\"inputs\">\n  <h2 id=\"输入参数\">输入参数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/NgModel#输入参数\"><i class=\"material-icons\">link</i></a></h2>\n  \n  <div class=\"input\">\n    <code>name</code> 绑定到 <code><a href=\"api/forms/NgModel#name\" class=\"code-anchor\">NgModel.name</a></code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code>disabled</code> 绑定到 <code><a href=\"api/forms/NgModel#isDisabled\" class=\"code-anchor\">NgModel.isDisabled</a></code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 绑定到 <code><a href=\"api/forms/NgModel#model\" class=\"code-anchor\">NgModel.model</a></code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code>ngModelOptions</code> 绑定到 <code><a href=\"api/forms/NgModel#options\" class=\"code-anchor\">NgModel.options</a></code>\n    \n  </div>\n  \n</section>\n\n  \n<section class=\"outputs\">\n  <h2 id=\"输出参数\">输出参数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/NgModel#输出参数\"><i class=\"material-icons\">link</i></a></h2>\n  \n  <div class=\"output\">\n    <code>ngModelChange</code> 绑定到 <code><a href=\"api/forms/NgModel#update\" class=\"code-anchor\">NgModel.update</a></code>\n    \n  </div>\n  \n</section>\n\n  \n<section class=\"export-as\">\n  <h2 id=\"exported-as\">导出为<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/NgModel#exported-as\"><i class=\"material-icons\">link</i></a></h2>\n  <div>\n    <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code>\n  </div>\n</section>\n\n\n\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/NgModel#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-origin=\"off\">The <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> instance will track the value, user interaction, and\nvalidation status of the control and keep the view synced with the model. If used\nwithin a parent form, the directive will also register itself with the form as a child\ncontrol.</p>\n<p translation-result=\"\">这个 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 实例将会跟踪值、用户交互和控件的验证状态，以保持视图与模型的同步。\n如果用在某个父表单中，该指令还会把自己注册为这个父表单的子控件。</p>\n<p translation-origin=\"off\">This directive can be used by itself or as part of a larger form. All you need is the\n<code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> selector to activate it.</p>\n<p translation-result=\"\">这个指令可以单独使用，也可以用作一个大表单的一部分。你所要做的一切就是用 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 选择器来激活它。</p>\n<p translation-origin=\"off\">It accepts a domain model as an optional <code><a href=\"api/core/Input\" class=\"code-anchor\">Input</a></code>. If you have a one-way binding\nto <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> with <code>[]</code> syntax, changing the value of the domain model in the component\nclass will set the value in the view. If you have a two-way binding with <code>[()]</code> syntax\n(also known as 'banana-box syntax'), the value in the UI will always be synced back to\nthe domain model in your class as well.</p>\n<p translation-result=\"\">它可以接受一个领域模型作为可选的 <code><a href=\"api/core/Input\" class=\"code-anchor\">Input</a></code>。如果使用 <code>[]</code> 语法来单向绑定到 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code>，那么在组件类中修改领域模型将会更新视图中的值。\n如果使用 <code>[()]</code> 语法来双向绑定到 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code>，那么视图中值的变化同样会随时同步回组件类中的领域模型。</p>\n<p translation-origin=\"off\">If you wish to inspect the properties of the associated <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> (like\nvalidity state), you can also export the directive into a local template variable using\n<code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> as the key (ex: <code>#myVar=\"<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>\"</code>). You can then access the control using the\ndirective's <code>control</code> property, but most properties you'll need (like <code>valid</code> and <code>dirty</code>)\nwill fall through to the control anyway, so you can access them directly. You can see a\nfull list of properties directly available in <code><a href=\"api/forms/AbstractControlDirective\" class=\"code-anchor\">AbstractControlDirective</a></code>.</p>\n<p translation-result=\"\">如果你希望查看与 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 相关的属性（比如校验状态），你也可以使用 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 作为键，把该指令导出到一个局部模板变量中（如：<code>#myVar=\"<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>\"</code>）。\n你也可以使用该指令的 <code>control</code> 属性来访问此控件，实际上你要用到的大多数属性（如 <code>valid</code> 和 <code>dirty</code>）都会委托给该控件，这样你就可以直接访问这些属性了。\n你可以在 <code><a href=\"api/forms/AbstractControlDirective\" class=\"code-anchor\">AbstractControlDirective</a></code> 中直接查看这些属性的完整列表。</p>\n<p translation-origin=\"off\">The following is an example of a simple standalone control using <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code>:</p>\n<p translation-result=\"\">下面是一个在简单的独立控件中使用 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 的例子：</p>\n<code-example>\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'example-app',\n  <a href=\"api/core/Component#template\" class=\"code-anchor\">template</a>: `\n    &#x3C;input [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"name\" #ctrl=\"<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>\" required>\n\n    &#x3C;p>Value: {{ name }}&#x3C;/p>\n    &#x3C;p>Valid: {{ ctrl.valid }}&#x3C;/p>\n    \n    &#x3C;button (click)=\"setValue()\">Set value&#x3C;/button>\n  `,\n})\nexport class SimpleNgModelComp {\n  name: string = '';\n\n  setValue() { this.name = 'Nancy'; }\n}\n\n</code-example>\n<p translation-origin=\"off\">When using the <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> within <code>&#x3C;form></code> tags, you'll also need to supply a <code>name</code> attribute\nso that the control can be registered with the parent form under that name.</p>\n<p translation-result=\"\">当在 <code>&#x3C;form></code> 标签中使用 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 时，你还需要提供一个 <code>name</code> 属性，以便该控件可以使用这个名字把自己注册到父表单中。</p>\n<p translation-origin=\"off\">It's worth noting that in the context of a parent form, you often can skip one-way or\ntwo-way binding because the parent form will sync the value for you. You can access\nits properties by exporting it into a local template variable using <code><a href=\"api/forms/NgForm\" class=\"code-anchor\">ngForm</a></code> (ex:\n<code>#f=\"<a href=\"api/forms/NgForm\" class=\"code-anchor\">ngForm</a>\"</code>). Then you can pass it where it needs to go on submit.</p>\n<p translation-result=\"\">不用太关注父表单的上下文，你通常可以忽略它的单向或双向绑定，因为这个父表单将会为你同步该值。\n你可以使用 <code><a href=\"api/forms/NgForm\" class=\"code-anchor\">ngForm</a></code> 把它导出给一个模板局部变量（如 <code>#f=\"<a href=\"api/forms/NgForm\" class=\"code-anchor\">ngForm</a>\"</code>），以访问它的属性。\n然后你就可以在提交时把它传给任何需要它的地方了。</p>\n<p translation-origin=\"off\">If you do need to populate initial values into your form, using a one-way binding for\n<code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> tends to be sufficient as long as you use the exported form's value rather\nthan the domain model's value on submit.</p>\n<p translation-result=\"\">如果你只是要为表单设置初始值，对 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 使用单向绑定就够了。在提交时，你可以使用从表单导出的值，而不必使用领域模型的值。</p>\n<p translation-origin=\"off\">Take a look at an example of using <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> within a form:</p>\n<p translation-result=\"\">来看一个在表单中使用 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 的例子：</p>\n<code-example>\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\nimport {<a href=\"api/forms/NgForm\" class=\"code-anchor\">NgForm</a>} from '@angular/forms';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'example-app',\n  <a href=\"api/core/Component#template\" class=\"code-anchor\">template</a>: `\n    &#x3C;form #f=\"<a href=\"api/forms/NgForm\" class=\"code-anchor\">ngForm</a>\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n      &#x3C;input name=\"first\" <a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a> required #first=\"<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>\">\n      &#x3C;input name=\"last\" <a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>>\n      &#x3C;button>Submit&#x3C;/button>\n    &#x3C;/form>\n    \n    &#x3C;p>First name value: {{ first.value }}&#x3C;/p>\n    &#x3C;p>First name valid: {{ first.valid }}&#x3C;/p>\n    &#x3C;p><a href=\"api/forms/Form\" class=\"code-anchor\">Form</a> value: {{ f.value | <a href=\"api/common/JsonPipe\" class=\"code-anchor\">json</a> }}&#x3C;/p>\n    &#x3C;p><a href=\"api/forms/Form\" class=\"code-anchor\">Form</a> valid: {{ f.valid }}&#x3C;/p>\n  `,\n})\nexport class SimpleFormComp {\n  onSubmit(f: <a href=\"api/forms/NgForm\" class=\"code-anchor\">NgForm</a>) {\n    console.log(f.value);  // { first: '', last: '' }\n    console.log(f.valid);  // false\n  }\n}\n\n</code-example>\n<p translation-origin=\"off\">To see <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> examples with different form control types, see:</p>\n<p translation-result=\"\">要查看不同空间类型的 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 范例，参见：</p>\n<ul>\n<li>\n<p translation-origin=\"off\">Radio buttons: <code><a href=\"api/forms/RadioControlValueAccessor\" class=\"code-anchor\">RadioControlValueAccessor</a></code></p>\n<p translation-result=\"\">单选按钮组：<code><a href=\"api/forms/RadioControlValueAccessor\" class=\"code-anchor\">RadioControlValueAccessor</a></code></p>\n</li>\n<li>\n<p translation-origin=\"off\">Selects: <code><a href=\"api/forms/SelectControlValueAccessor\" class=\"code-anchor\">SelectControlValueAccessor</a></code></p>\n<p translation-result=\"\">下拉框：<code><a href=\"api/forms/SelectControlValueAccessor\" class=\"code-anchor\">SelectControlValueAccessor</a></code></p>\n</li>\n</ul>\n<p translation-origin=\"off\"><strong>npm package</strong>: <code>@angular/forms</code></p>\n<p translation-result=\"\"><strong>npm 包</strong>: <code>@angular/forms</code></p>\n<p translation-origin=\"off\"><strong>NgModule</strong>: <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code></p>\n\n</section>\n\n\n  \n\n\n  \n\n  \n\n  \n\n<section class=\"instance-properties\">\n  <h2 id=\"属性\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/NgModel#属性\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性名</th>\n        <th>类型</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"control\"></a>control</td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code></label></td>\n        <td><span class=\"read-only-property\">只读</span>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"viewModel\"></a>viewModel</td>\n        <td><label class=\"property-type-label\"><code>any</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"name\"></a>name</td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"isDisabled\"></a>isDisabled</td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"model\"></a>model</td>\n        <td><label class=\"property-type-label\"><code>any</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"options\"></a>options</td>\n        <td><label class=\"property-type-label\"><code>{\n    name?: string;\n    standalone?: boolean;\n    updateOn?: FormHooks;\n}</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Options object for this <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> instance. You can configure the following properties:</p>\n<p translation-result=\"\">当前 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 实例的配置对象。你可以配置下列属性：</p>\n\n          <p translation-origin=\"off\"><strong>name</strong>: An alternative to setting the name attribute on the form control element.\nSometimes, especially with custom form components, the name attribute might be used\nas an <code>@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a></code> property for a different purpose. In cases like these, you can configure\nthe <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> name through this option.</p>\n<p translation-result=\"\"><strong>name</strong>：设置这个表单控件元素名的一个替代方案。有时候，特别是在自定义表单控件上，name 属性可能被作为 <code>@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a></code> 属性用作其它目的。\n这时，你就可以通过该选项来配置 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 的名字。</p>\n<code-example language=\"html\">\n&#x3C;form>\n  &#x3C;my-person-control name=\"Nancy\" <a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a> [ngModelOptions]=\"{name: 'user'}\">\n  &#x3C;/my-person-control>\n&#x3C;/form>\n&#x3C;!-- form value: {user: ''} -->\n</code-example>\n<p translation-origin=\"off\"><strong>standalone</strong>: Defaults to false. If this is set to true, the <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> will not\nregister itself with its parent form, and will act as if it's not in the form. This\ncan be handy if you have form meta-controls, a.k.a. form elements nested in\nthe <code>&#x3C;form></code> tag that control the display of the form, but don't contain form data.</p>\n<p translation-result=\"\"><strong>standalone</strong>：默认为 <code>false</code>。如果设置为 <code>true</code>，那么 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 就不会把自己注册到它的父表单上，其行为就像它没有在表单中一样。\n如果要使用表单元控件，这会很方便。表单元控件是指嵌在 <code>&#x3C;form></code> 标签中的表单元素，它控制表单的显示，但不包含表单数据。</p>\n<code-example language=\"html\">\n&#x3C;form>\n  &#x3C;input name=\"login\" <a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a> placeholder=\"Login\">\n  &#x3C;input type=\"checkbox\" <a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a> [ngModelOptions]=\"{standalone: true}\"> Show more options?\n&#x3C;/form>\n&#x3C;!-- form value: {login: ''} -->\n</code-example>\n<p translation-origin=\"off\"><strong>updateOn</strong>: Defaults to <code>'change'</code>. Defines the event upon which the form control\nvalue and validity will update. Also accepts <code>'blur'</code> and <code>'submit'</code>.</p>\n<p translation-result=\"\"><strong>updateOn</strong>：默认为 <code>'change'</code>。用来定义该何时更新表单控件的值和有效性。其它有效值为：<code>'blur'</code> 和 <code>'submit'</code>。</p>\n<code-example language=\"html\">\n&#x3C;input [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"firstName\" [ngModelOptions]=\"{updateOn: 'blur'}\">\n</code-example>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"update\"></a>update</td>\n        <td><label class=\"property-type-label\"><code>new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>()</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"path\"></a>path</td>\n        <td><label class=\"property-type-label\"><code>string[]</code></label></td>\n        <td><span class=\"read-only-property\">只读</span>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"formDirective\"></a>formDirective</td>\n        <td><label class=\"property-type-label\"><code>any</code></label></td>\n        <td><span class=\"read-only-property\">只读</span>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"validator\"></a>validator</td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | null</code></label></td>\n        <td><span class=\"read-only-property\">只读</span>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"asyncValidator\"></a>asyncValidator</td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | null</code></label></td>\n        <td><span class=\"read-only-property\">只读</span>\n          \n          \n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n  \n\n<section class=\"instance-methods\">\n  <h2 id=\"方法\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/NgModel#方法\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"ngOnChanges\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"ngonchanges\">\n        ngOnChanges()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/NgModel#ngonchanges\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/forms/src/directives/ng_model.ts?message=docs(forms)%3A%20describe%20your%20change...#L238-L250\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/forms/src/directives/ng_model.ts#L238-L250\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\">ngOnChanges(<a href=\"api/core/QueryList#changes\" class=\"code-anchor\">changes</a>: <a href=\"api/core/SimpleChanges\" class=\"code-anchor\">SimpleChanges</a>)</code-example>\n\n<h4 class=\"no-anchor\" id=\"参数\">参数</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>changes</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code><a href=\"api/core/SimpleChanges\" class=\"code-anchor\">SimpleChanges</a></code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n    <a id=\"ngOnDestroy\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"ngondestroy\">\n        ngOnDestroy()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/NgModel#ngondestroy\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/forms/src/directives/ng_model.ts?message=docs(forms)%3A%20describe%20your%20change...#L251-L252\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/forms/src/directives/ng_model.ts#L251-L252\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\">ngOnDestroy(): void</code-example>\n\n<h4 class=\"no-anchor\" id=\"参数-1\">参数</h4>\n<p>没有参数。</p>\n\n\n<h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n<p translation-origin=\"off\"><code>void</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n    <a id=\"viewToModelUpdate\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"viewtomodelupdate\">\n        viewToModelUpdate()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/NgModel#viewtomodelupdate\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/forms/src/directives/ng_model.ts?message=docs(forms)%3A%20describe%20your%20change...#L265-L269\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/forms/src/directives/ng_model.ts#L265-L269\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\">viewToModelUpdate(newValue: any): void</code-example>\n\n<h4 class=\"no-anchor\" id=\"参数-2\">参数</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>newValue</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code>any</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"返回值-1\">返回值</h4>\n<p translation-origin=\"off\"><code>void</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/common/http/HttpHeaderResponse\n - api/common/http/HttpRequest\n - api/common/http/HttpResponse\n - api/core/WrappedValue\n - api/forms\n - api/forms/CheckboxControlValueAccessor\n - api/forms/CheckboxRequiredValidator\n - api/forms/DefaultValueAccessor\n - api/forms/EmailValidator\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/MaxLengthValidator\n - api/forms/MinLengthValidator\n - api/forms/NgControlStatus\n - api/forms/NgForm\n - api/forms/NgModelGroup\n - api/forms/PatternValidator\n - api/forms/RadioControlValueAccessor\n - api/forms/RequiredValidator\n - api/forms/SelectControlValueAccessor\n - api/forms/SelectMultipleControlValueAccessor\n - guide/ajs-quick-reference\n - guide/architecture-components\n - guide/change-log\n - guide/dependency-injection-in-action\n - guide/docs-style-guide\n - guide/form-validation\n - guide/forms\n - guide/frequent-ngmodules\n - guide/glossary\n - guide/http\n - guide/lifecycle-hooks\n - guide/ngmodule-api\n - guide/ngmodule-faq\n - guide/pipes\n - guide/reactive-forms\n - guide/router\n - guide/service-worker-devops\n - guide/sharing-ngmodules\n - guide/structural-directives\n - guide/styleguide\n - guide/template-syntax\n - guide/testing\n - guide/updating\n - guide/upgrade\n - guide/user-input\n - tutorial/toh-pt1\n - tutorial/toh-pt2\n - tutorial/toh-pt3\n - tutorial/toh-pt5\n - tutorial/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - api/common/JsonPipe\n - api/core/Component\n - api/core/Component#template\n - api/core/Directive\n - api/core/Directive#exportAs\n - api/core/EventEmitter\n - api/core/Input\n - api/core/OnChanges\n - api/core/OnDestroy\n - api/core/QueryList#changes\n - api/core/SimpleChanges\n - api/forms\n - api/forms/AbstractControlDirective\n - api/forms/AbstractControlDirective#control\n - api/forms/AbstractControlDirective#dirty\n - api/forms/AbstractControlDirective#disabled\n - api/forms/AbstractControlDirective#enabled\n - api/forms/AbstractControlDirective#errors\n - api/forms/AbstractControlDirective#getError\n - api/forms/AbstractControlDirective#hasError\n - api/forms/AbstractControlDirective#invalid\n - api/forms/AbstractControlDirective#path\n - api/forms/AbstractControlDirective#pending\n - api/forms/AbstractControlDirective#pristine\n - api/forms/AbstractControlDirective#reset\n - api/forms/AbstractControlDirective#status\n - api/forms/AbstractControlDirective#statusChanges\n - api/forms/AbstractControlDirective#touched\n - api/forms/AbstractControlDirective#untouched\n - api/forms/AbstractControlDirective#valid\n - api/forms/AbstractControlDirective#value\n - api/forms/AbstractControlDirective#valueChanges\n - api/forms/AsyncValidatorFn\n - api/forms/Form\n - api/forms/FormControl\n - api/forms/FormControlName\n - api/forms/FormsModule\n - api/forms/NgControl\n - api/forms/NgControl#asyncValidator\n - api/forms/NgControl#name\n - api/forms/NgControl#validator\n - api/forms/NgControl#valueAccessor\n - api/forms/NgControl#viewToModelUpdate\n - api/forms/NgForm\n - api/forms/NgModel#asyncValidator\n - api/forms/NgModel#control\n - api/forms/NgModel#description\n - api/forms/NgModel#exported-as\n - api/forms/NgModel#formDirective\n - api/forms/NgModel#isDisabled\n - api/forms/NgModel#model\n - api/forms/NgModel#name\n - api/forms/NgModel#ngOnChanges\n - api/forms/NgModel#ngOnDestroy\n - api/forms/NgModel#ngmodel\n - api/forms/NgModel#ngonchanges\n - api/forms/NgModel#ngondestroy\n - api/forms/NgModel#options\n - api/forms/NgModel#path\n - api/forms/NgModel#selectors\n - api/forms/NgModel#update\n - api/forms/NgModel#validator\n - api/forms/NgModel#viewModel\n - api/forms/NgModel#viewToModelUpdate\n - api/forms/NgModel#viewtomodelupdate\n - api/forms/NgModel#属性\n - api/forms/NgModel#方法\n - api/forms/NgModel#输入参数\n - api/forms/NgModel#输出参数\n - api/forms/RadioControlValueAccessor\n - api/forms/SelectControlValueAccessor\n - api/forms/ValidatorFn\n - https://github.com/angular/angular/edit/master/packages/forms/src/directives/ng_model.ts?message=docs(forms)%3A%20describe%20your%20change...#L238-L250\n - https://github.com/angular/angular/edit/master/packages/forms/src/directives/ng_model.ts?message=docs(forms)%3A%20describe%20your%20change...#L251-L252\n - https://github.com/angular/angular/edit/master/packages/forms/src/directives/ng_model.ts?message=docs(forms)%3A%20describe%20your%20change...#L265-L269\n - https://github.com/angular/angular/edit/master/packages/forms/src/directives/ng_model.ts?message=docs(forms)%3A%20describe%20your%20change...#L62-L337\n - https://github.com/angular/angular/tree/6.1.0/packages/forms/src/directives/ng_model.ts#L238-L250\n - https://github.com/angular/angular/tree/6.1.0/packages/forms/src/directives/ng_model.ts#L251-L252\n - https://github.com/angular/angular/tree/6.1.0/packages/forms/src/directives/ng_model.ts#L265-L269\n - https://github.com/angular/angular/tree/6.1.0/packages/forms/src/directives/ng_model.ts#L62-L337\n-->"
}