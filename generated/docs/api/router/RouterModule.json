{
  "id": "api/router/RouterModule",
  "title": "RouterModule",
  "contents": "\n\n<article>\n  <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/router/src/router_module.ts?message=docs(router)%3A%20describe%20your%20change...#L82-L250\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/router/src/router_module.ts#L82-L250\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/router\", \"name\": \"@angular/router\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/router/RouterModule\", \"name\": \"RouterModule\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/router\">@angular/router</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"routermodule\">RouterModule<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterModule#routermodule\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\">Adds router directives and providers.</p>\n<p translation-result=\"\">添加路由器指令和服务提供商。</p>\n<p></p>\n  \n\n  \n\n  \n  <section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\">\nclass <a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a> {\n  <a class=\"code-anchor\" href=\"api/router/RouterModule#forRoot\">static forRoot(routes: Routes, config?: ExtraOptions): ModuleWithProviders&#x3C;RouterModule></a>\n  <a class=\"code-anchor\" href=\"api/router/RouterModule#forChild\">static forChild(routes: Routes): ModuleWithProviders&#x3C;RouterModule></a>\n}\n</code-example>\n\n  \n  \n\n</section>\n\n\n  \n\n  \n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterModule#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-origin=\"off\">Managing state transitions is one of the hardest parts of building applications. This is\nespecially true on the web, where you also need to ensure that the state is reflected in the URL.\nIn addition, we often want to split applications into multiple bundles and load them on demand.\nDoing this transparently is not trivial.</p>\n<p translation-result=\"\">在构建应用时，管理状态的转换是最难的任务之一。对 Web 来说尤其如此，你还要确保这个状态同时在 URL 中反映出来。\n另外，我们通常会希望把应用拆分成多个发布包，并按需加载。要让这些工作透明化，可没那么简单。</p>\n<p translation-origin=\"off\">The Angular router solves these problems. Using the router, you can declaratively specify\napplication states, manage state transitions while taking care of the URL, and load bundles on\ndemand.</p>\n<p translation-result=\"\">Angular 的路由器解决了这些问题。使用路由器，你可以声明式的指定应用的状态、管理状态的转换，还可以处理好 URL，还可以按需加载发布包。</p>\n<p translation-origin=\"off\"><a href=\"https://angular.io/docs/ts/latest/guide/router.html\">Read this developer guide</a> to get an\noverview of how the router should be used.</p>\n<p translation-result=\"\"><a href=\"/guide/router\">阅读开发指南</a> 以获得如何使用路由器的全景图。</p>\n\n</section>\n\n\n  \n\n\n  \n\n<section class=\"static-methods\">\n  <h2 id=\"静态方法\">静态方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterModule#静态方法\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"forRoot\"></a>\n<table class=\"is-full-width method-table static-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"forroot\">\n        forRoot()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterModule#forroot\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/router/src/router_module.ts?message=docs(router)%3A%20describe%20your%20change...#L164-L240\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/router/src/router_module.ts#L164-L240\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-origin=\"off\">Creates a module with all the router providers and directives. It also optionally sets up an\napplication listener to perform an initial navigation.</p>\n<p translation-result=\"\">创建一个带有所有路由器服务提供商和指令的模块。它还可以（可选的）设置一个应用监听器，来执行首次导航。</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> forRoot(routes: <a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a>, <a href=\"api/router/Router#config\" class=\"code-anchor\">config</a>?: <a href=\"api/router/ExtraOptions\" class=\"code-anchor\">ExtraOptions</a>): <a href=\"api/core/ModuleWithProviders\" class=\"code-anchor\">ModuleWithProviders</a>&#x3C;<a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a>></code-example>\n\n<h4 class=\"no-anchor\" id=\"参数\">参数</h4>\n<table class=\"is-full-width list-table parameters-table static-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"static-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>routes</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code>.</p>\n      \n      </td>\n    </tr>\n    <tr class=\"static-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>config</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code><a href=\"api/router/ExtraOptions\" class=\"code-anchor\">ExtraOptions</a></code>.</p>\n      <p translation-result=\"\">可选. 默认值是 <code>undefined</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n<p translation-origin=\"off\"><code><a href=\"api/core/ModuleWithProviders\" class=\"code-anchor\">ModuleWithProviders</a>&#x3C;<a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a>></code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p translation-origin=\"off\">Options (see <code><a href=\"api/router/ExtraOptions\" class=\"code-anchor\">ExtraOptions</a></code>):</p>\n<p translation-result=\"\">选项（参见 <code><a href=\"api/router/ExtraOptions\" class=\"code-anchor\">ExtraOptions</a></code>）：</p>\n<ul>\n<li>\n<p translation-origin=\"off\"><code><a href=\"api/router/ExtraOptions#enableTracing\" class=\"code-anchor\">enableTracing</a></code> makes the router log all its internal events to the console.</p>\n<p translation-result=\"\"><code><a href=\"api/router/ExtraOptions#enableTracing\" class=\"code-anchor\">enableTracing</a></code> 让路由器把它所有的内部事件都记录到控制台中。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><code><a href=\"api/router/ExtraOptions#useHash\" class=\"code-anchor\">useHash</a></code> enables the location strategy that uses the URL fragment instead of the history\nAPI.</p>\n<p translation-result=\"\">  <code><a href=\"api/router/ExtraOptions#useHash\" class=\"code-anchor\">useHash</a></code> 修改位置策略（<code><a href=\"api/common/LocationStrategy\" class=\"code-anchor\">LocationStrategy</a></code>），用 URL 片段（<code>#</code>）代替 <code>history</code> API。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><code><a href=\"api/router/ExtraOptions#initialNavigation\" class=\"code-anchor\">initialNavigation</a></code> disables the initial navigation.</p>\n<p translation-result=\"\"><code><a href=\"api/router/ExtraOptions#initialNavigation\" class=\"code-anchor\">initialNavigation</a></code> 禁用首次导航。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><code>errorHandler</code> provides a custom error handler.</p>\n<p translation-result=\"\"><code>errorHandler</code> 提供一个自定义的错误处理器。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><code><a href=\"api/router/ExtraOptions#preloadingStrategy\" class=\"code-anchor\">preloadingStrategy</a></code> configures a preloading strategy (see <code><a href=\"api/router/PreloadAllModules\" class=\"code-anchor\">PreloadAllModules</a></code>).</p>\n<p translation-result=\"\"><code><a href=\"api/router/ExtraOptions#preloadingStrategy\" class=\"code-anchor\">preloadingStrategy</a></code> 配置预加载策略（参见 <code><a href=\"api/router/PreloadAllModules\" class=\"code-anchor\">PreloadAllModules</a></code>）。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><code>onSameUrlNavigation</code> configures how the router handles navigation to the current URL. See\n<code><a href=\"api/router/ExtraOptions\" class=\"code-anchor\">ExtraOptions</a></code> for more details.</p>\n<p translation-result=\"\">  <code>onSameUrlNavigation</code> 会配置路由器在导航到当前 URL 时该如何处理。欲知详情，参见 <code><a href=\"api/router/ExtraOptions\" class=\"code-anchor\">ExtraOptions</a></code>。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><code>paramsInheritanceStrategy</code> defines how the router merges params, data and resolved data\nfrom parent to child routes.</p>\n<p translation-result=\"\">  <code>paramsInheritanceStrategy</code> 定义了路由器要如何把父路由的参数、数据和解析出的数据合并到子路由中。</p>\n</li>\n</ul>\n\n      </td>\n    </tr>\n\n  \n    </tbody>\n</table>\n\n  \n    <a id=\"forChild\"></a>\n<table class=\"is-full-width method-table static-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"forchild\">\n        forChild()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterModule#forchild\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/router/src/router_module.ts?message=docs(router)%3A%20describe%20your%20change...#L241-L249\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/router/src/router_module.ts#L241-L249\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-origin=\"off\">Creates a module with all the router directives and a provider registering routes.</p>\n<p translation-result=\"\">创建一个具有所有路由器指令和一个用于注册路由的提供商。</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> forChild(routes: <a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a>): <a href=\"api/core/ModuleWithProviders\" class=\"code-anchor\">ModuleWithProviders</a>&#x3C;<a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a>></code-example>\n\n<h4 class=\"no-anchor\" id=\"参数-1\">参数</h4>\n<table class=\"is-full-width list-table parameters-table static-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"static-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>routes</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"返回值-1\">返回值</h4>\n<p translation-origin=\"off\"><code><a href=\"api/core/ModuleWithProviders\" class=\"code-anchor\">ModuleWithProviders</a>&#x3C;<a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a>></code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n</section>\n\n  \n\n  \n\n\n\n  \n\n\n  \n<section class=\"annotations\">\n  <h2 id=\"annotations\">注解<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterModule#annotations\"><i class=\"material-icons\">link</i></a></h2>\n    <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n    <a href=\"api/core/NgModule#declarations\" class=\"code-anchor\">declarations</a>: ROUTER_DIRECTIVES,\n    <a href=\"api/core/NgModule#exports\" class=\"code-anchor\">exports</a>: ROUTER_DIRECTIVES,\n    entryComponents: [EmptyOutletComponent]\n})</code-example>\n    \n  \n</section>\n\n\n\n  \n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterModule#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-origin=\"off\">RouterModule can be imported multiple times: once per lazily-loaded bundle.\nSince the router deals with a global shared resource--location, we cannot have\nmore than one router service active.</p>\n<p translation-result=\"\">RouterModule 可能会被多次导入：每个惰性加载的发布包都会导入一次。\n但由于路由器要和全局共享的资源 - location 打交道，所以不能同时激活一个以上的 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 服务。</p>\n<p translation-origin=\"off\">That is why there are two ways to create the module: <code>RouterModule.forRoot</code> and\n<code>RouterModule.forChild</code>.</p>\n<p translation-result=\"\">这就是需要两种方式来创建本模块的原因：<code>RouterModule.forRoot</code> 和 <code>RouterModule.forChild</code>。</p>\n<ul>\n<li>\n<p translation-origin=\"off\"><code>forRoot</code> creates a module that contains all the directives, the given routes, and the router\nservice itself.</p>\n<p translation-result=\"\"><code>forRoot</code> 创建一个包含所有指令、指定的路由和 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 服务本身的模块。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><code>forChild</code> creates a module that contains all the directives and the given routes, but does not\ninclude the router service.</p>\n<p translation-result=\"\"><code>forChild</code> 会创建一个包含所有指令、指定的路由，但不含 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 服务的模块。</p>\n</li>\n</ul>\n<p translation-origin=\"off\">When registered at the root, the module should be used as follows</p>\n<p translation-result=\"\">当注册在根模块时，该模块应该这样用：</p>\n<code-example>\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  <a href=\"api/core/NgModule#imports\" class=\"code-anchor\">imports</a>: [RouterModule.forRoot(<a href=\"api/router/ROUTES\" class=\"code-anchor\">ROUTES</a>)]\n})\nclass MyNgModule {}\n</code-example>\n<p translation-origin=\"off\">For submodules and lazy loaded submodules the module should be used as follows:</p>\n<p translation-result=\"\">对于子模块和惰性加载的子模块，该模块应该这样用：</p>\n<code-example>\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  <a href=\"api/core/NgModule#imports\" class=\"code-anchor\">imports</a>: [RouterModule.forChild(<a href=\"api/router/ROUTES\" class=\"code-anchor\">ROUTES</a>)]\n})\nclass MyNgModule {}\n</code-example>\n\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/router\n - api/router/Router\n - api/router/testing/RouterTestingModule\n - guide/aot-compiler\n - guide/cheatsheet\n - guide/frequent-ngmodules\n - guide/lazy-loading-ngmodules\n - guide/module-types\n - guide/ngmodule-faq\n - guide/ngmodules\n - guide/router\n - guide/singleton-services\n - guide/styleguide\n - guide/testing\n - guide/upgrade\n - tutorial/toh-pt5\n - tutorial/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - /guide/router\n - api/common/LocationStrategy\n - api/core/ModuleWithProviders\n - api/core/NgModule\n - api/core/NgModule#declarations\n - api/core/NgModule#exports\n - api/core/NgModule#imports\n - api/router\n - api/router/ExtraOptions\n - api/router/ExtraOptions#enableTracing\n - api/router/ExtraOptions#initialNavigation\n - api/router/ExtraOptions#preloadingStrategy\n - api/router/ExtraOptions#useHash\n - api/router/PreloadAllModules\n - api/router/ROUTES\n - api/router/Router\n - api/router/Router#config\n - api/router/RouterModule#annotations\n - api/router/RouterModule#description\n - api/router/RouterModule#forChild\n - api/router/RouterModule#forRoot\n - api/router/RouterModule#forchild\n - api/router/RouterModule#forroot\n - api/router/RouterModule#routermodule\n - api/router/RouterModule#usage-notes\n - api/router/RouterModule#静态方法\n - api/router/Routes\n - api/upgrade/static\n - https://angular.io/docs/ts/latest/guide/router.html\n - https://github.com/angular/angular/edit/master/packages/router/src/router_module.ts?message=docs(router)%3A%20describe%20your%20change...#L164-L240\n - https://github.com/angular/angular/edit/master/packages/router/src/router_module.ts?message=docs(router)%3A%20describe%20your%20change...#L241-L249\n - https://github.com/angular/angular/edit/master/packages/router/src/router_module.ts?message=docs(router)%3A%20describe%20your%20change...#L82-L250\n - https://github.com/angular/angular/tree/6.1.0/packages/router/src/router_module.ts#L164-L240\n - https://github.com/angular/angular/tree/6.1.0/packages/router/src/router_module.ts#L241-L249\n - https://github.com/angular/angular/tree/6.1.0/packages/router/src/router_module.ts#L82-L250\n-->"
}