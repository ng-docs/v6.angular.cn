{
  "id": "api/router/RouterLink",
  "title": "RouterLink",
  "contents": "\n\n<article>\n  <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/router/src/directives/router_link.ts?message=docs(router)%3A%20describe%20your%20change...#L18-L213\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/router/src/directives/router_link.ts#L18-L213\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/router\", \"name\": \"@angular/router\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/router/RouterLink\", \"name\": \"RouterLink\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/router\">@angular/router</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"routerlink\">RouterLink<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterLink#routerlink\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label directive\">directive</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\">Lets you link to specific routes in your app.</p>\n<p translation-result=\"\">让你可以在应用中链接到特定的路由。</p>\n<p></p>\n  \n\n  \n\n  <section class=\"directive-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({ selector: ':not(<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>)[<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]' })\nclass <a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a> {\n  <a class=\"code-anchor\" href=\"api/router/RouterLink#queryParams\">queryParams: {...}</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterLink#fragment\">fragment: string</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterLink#queryParamsHandling\">queryParamsHandling: QueryParamsHandling</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterLink#preserveFragment\">preserveFragment: boolean</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterLink#skipLocationChange\">skipLocationChange: boolean</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterLink#replaceUrl\">replaceUrl: boolean</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterLink#routerLink\">set routerLink: any[] | string</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterLink#preserveQueryParams\">set preserveQueryParams: boolean</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterLink#urlTree\">get urlTree: UrlTree</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterLink#onClick\">onClick(): boolean</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n  \n<section class=\"selectors\">\n  <h2 id=\"selectors\">选择器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterLink#selectors\"><i class=\"material-icons\">link</i></a></h2>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading selector\">\n  :not(<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>)[<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]\n  </code-example>\n</section>\n\n\n  \n<section class=\"inputs\">\n  <h2 id=\"输入参数\">输入参数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterLink#输入参数\"><i class=\"material-icons\">link</i></a></h2>\n  \n  <div class=\"input\">\n    <code>queryParams</code> 绑定到 <code><a href=\"api/router/RouterLink#queryParams\" class=\"code-anchor\">RouterLink.queryParams</a></code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code>fragment</code> 绑定到 <code><a href=\"api/router/RouterLink#fragment\" class=\"code-anchor\">RouterLink.fragment</a></code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code>queryParamsHandling</code> 绑定到 <code><a href=\"api/router/RouterLink#queryParamsHandling\" class=\"code-anchor\">RouterLink.queryParamsHandling</a></code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code>preserveFragment</code> 绑定到 <code><a href=\"api/router/RouterLink#preserveFragment\" class=\"code-anchor\">RouterLink.preserveFragment</a></code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code>skipLocationChange</code> 绑定到 <code><a href=\"api/router/RouterLink#skipLocationChange\" class=\"code-anchor\">RouterLink.skipLocationChange</a></code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code>replaceUrl</code> 绑定到 <code><a href=\"api/router/RouterLink#replaceUrl\" class=\"code-anchor\">RouterLink.replaceUrl</a></code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> 绑定到 <code><a href=\"api/router/RouterLink#routerLink\" class=\"code-anchor\">RouterLink.routerLink</a></code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code><a href=\"api/router/RouterLinkWithHref#preserveQueryParams\" class=\"code-anchor\">preserveQueryParams</a></code> 绑定到 <code><a href=\"api/router/RouterLink#preserveQueryParams\" class=\"code-anchor\">RouterLink.preserveQueryParams</a></code>\n    \n  </div>\n  \n</section>\n\n  \n  \n\n\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterLink#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-origin=\"off\">Consider the following route configuration:\n<code>[{ path: 'user/:name', component: UserCmp }]</code>.\nWhen linking to this <code>user/:name</code> route, you use the <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> directive.</p>\n<p translation-result=\"\">考虑下列路由配置：\n<code>[{ path: 'user/:name', component: UserCmp }]</code>.\n如果要链接到这个 <code>user/:name</code> 路由，你可以使用 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 指令。</p>\n<p translation-origin=\"off\">If the link is static, you can use the directive as follows:\n<code>&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/user/bob\">link to user component&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>></code></p>\n<p translation-result=\"\">如果该链接是静态的，你可以使用下列指令：\n<code>&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/user/bob\">链接到 user 组件&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>></code></p>\n<p translation-origin=\"off\">If you use dynamic values to generate the link, you can pass an array of path\nsegments, followed by the params for each segment.</p>\n<p translation-result=\"\">如果你要用动态值来生成该链接，你可以传入一组路径片段，每个片段后面都可以跟一些参数。</p>\n<p translation-origin=\"off\">For instance <code>['/team', teamId, 'user', userName, {details: true}]</code>\nmeans that we want to generate a link to <code>/team/11/user/bob;details=true</code>.</p>\n<p translation-result=\"\">比如 <code>['/team', teamId, 'user', userName, {details: true}]</code> 表示我们要生成一个到 <code>/team/11/user/bob;details=true</code> 的链接。</p>\n<p translation-origin=\"off\">Multiple static segments can be merged into one\n(e.g., <code>['/team/11/user', userName, {details: true}]</code>).</p>\n<p translation-result=\"\">多个静态片段可以合并为一个（比如 <code>['/team/11/user', userName, {details: true}]</code>）。</p>\n<p translation-origin=\"off\">The first segment name can be prepended with <code>/</code>, <code>./</code>, or <code>../</code>:</p>\n<p translation-result=\"\">第一个参数名可以使用 <code>/</code>、<code>./</code> 或 <code>../</code> 前缀：</p>\n<ul>\n<li>\n<p translation-origin=\"off\">If the first segment begins with <code>/</code>, the router will look up the route from the root of the\napp.</p>\n<p translation-result=\"\">如果第一个片段用 <code>/</code> 开头，则路由器会从应用的根路由开始查找。</p>\n</li>\n<li>\n<p translation-origin=\"off\">If the first segment begins with <code>./</code>, or doesn't begin with a slash, the router will\ninstead look in the children of the current activated route.</p>\n<p translation-result=\"\">如果第一个片段用 <code>./</code> 开头或者没有用斜杠开头，路由器就会从当前激活路由开始查找。</p>\n</li>\n<li>\n<p translation-origin=\"off\">And if the first segment begins with <code>../</code>, the router will go up one level.</p>\n<p translation-result=\"\">如果第一个片段以 <code>../</code> 开头，则路由器将会向上找一级。</p>\n</li>\n</ul>\n<p translation-origin=\"off\">You can set query params and fragment as follows:</p>\n<p translation-result=\"\">你可以像这样设置查询参数和 <code>#</code> 片段：</p>\n<code-example>\n&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n  link to user component\n&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>\n</code-example>\n<p translation-origin=\"off\">RouterLink will use these to generate this link: <code>/user/bob#education?debug=true</code>.</p>\n<p translation-result=\"\">RouterLink 将会使用它们生成如下链接：<code>/user/bob#education?debug=true</code>。</p>\n<p translation-origin=\"off\">(Deprecated in v4.0.0 use <code>queryParamsHandling</code> instead) You can also tell the\ndirective to preserve the current query params and fragment:</p>\n<p translation-result=\"\">（从 v4.0.0 中开始已废弃，请用 <code>queryParamsHandling</code> 来代替）你还可以告诉该指令保留当前的查询参数（<code>?</code>）和 <code>#</code> 片段：</p>\n<code-example>\n&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['/user/bob']\" <a href=\"api/router/RouterLinkWithHref#preserveQueryParams\" class=\"code-anchor\">preserveQueryParams</a> preserveFragment>\n  link to user component\n&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>\n</code-example>\n<p translation-origin=\"off\">You can tell the directive to how to handle queryParams, available options are:</p>\n<p translation-result=\"\">你可以告诉该指令要如何处理查询参数，有效的选项包括：</p>\n<ul>\n<li>\n<p translation-origin=\"off\"><code>'merge'</code>: merge the queryParams into the current queryParams</p>\n<p translation-result=\"\"><code>'merge'</code>：把老的查询参数合并进新的查询参数中</p>\n</li>\n<li>\n<p translation-origin=\"off\"><code>'preserve'</code>: preserve the current queryParams</p>\n<p translation-result=\"\"><code>'preserve'</code>：保持当前的查询参数</p>\n</li>\n<li>\n<p translation-origin=\"off\">default/<code>''</code>: use the queryParams only</p>\n<p translation-result=\"\">默认 / <code>''</code>：只使用当前查询参数</p>\n</li>\n</ul>\n<p translation-origin=\"off\">Same options for <a href=\"api/router/NavigationExtras#queryParamsHandling\">NavigationExtras#queryParamsHandling</a>.</p>\n<p translation-result=\"\">这个选项和 <a href=\"api/router/NavigationExtras#queryParamsHandling\">NavigationExtras#queryParamsHandling</a> 的一样。</p>\n<code-example>\n&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n  link to user component\n&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>\n</code-example>\n<p translation-origin=\"off\">The router link directive always treats the provided input as a delta to the current url.</p>\n<p translation-result=\"\"><code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 指令总是把新提供的输入看作是对当前 URL 的增量修改。</p>\n<p translation-origin=\"off\">For instance, if the current url is <code>/user/(box//aux:team)</code>.</p>\n<p translation-result=\"\">例如，如果当前 url 是 <code>/user/(box//aux:team)</code>，</p>\n<p translation-origin=\"off\">Then the following link <code>&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['/user/jim']\">Jim&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>></code> will generate the link\n<code>/user/(jim//aux:team)</code>.</p>\n<p translation-result=\"\">那么 <code>&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['/user/jim']\">Jim&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>></code> 生成的链接将是 <code>/user/(jim//aux:team)</code>。</p>\n<p translation-origin=\"off\">See <a href=\"api/router/Router#createUrlTree\">createUrlTree</a> for more information.</p>\n<p translation-result=\"\">欲知详情，参见 <a href=\"api/router/Router#createUrlTree\">createUrlTree</a>。</p>\n\n</section>\n\n\n  \n\n\n  \n\n  \n\n  \n\n<section class=\"instance-properties\">\n  <h2 id=\"属性\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterLink#属性\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性名</th>\n        <th>类型</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"queryParams\"></a>queryParams</td>\n        <td><label class=\"property-type-label\"><code>{\n    [k: string]: any;\n}</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"fragment\"></a>fragment</td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"queryParamsHandling\"></a>queryParamsHandling</td>\n        <td><label class=\"property-type-label\"><code>QueryParamsHandling</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"preserveFragment\"></a>preserveFragment</td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"skipLocationChange\"></a>skipLocationChange</td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"replaceUrl\"></a>replaceUrl</td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"routerLink\"></a>routerLink</td>\n        <td><label class=\"property-type-label\"><code>any[] | string</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"preserveQueryParams\"></a>preserveQueryParams</td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"urlTree\"></a>urlTree</td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code></label></td>\n        <td><span class=\"read-only-property\">只读</span>\n          \n          \n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n  \n\n<section class=\"instance-methods\">\n  <h2 id=\"方法\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterLink#方法\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"onClick\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"onclick\">\n        onClick()\n        \n      <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterLink#onclick\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/router/src/directives/router_link.ts?message=docs(router)%3A%20describe%20your%20change...#L192-L201\" aria-label=\"建议修改\" title=\"建议修改\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/router/src/directives/router_link.ts#L192-L201\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        \n\n<code-example language=\"ts\" hidecopy=\"true\" linenums=\"false\" class=\"no-box api-heading\">onClick(): boolean</code-example>\n\n<h4 class=\"no-anchor\" id=\"参数\">参数</h4>\n<p>没有参数。</p>\n\n\n<h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n<p translation-origin=\"off\"><code>boolean</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/router\n - api/router/ExtraOptions\n - api/router/RouterLinkActive\n - api/router/RouterLinkWithHref\n - guide/ajs-quick-reference\n - guide/cheatsheet\n - guide/frequent-ngmodules\n - guide/lazy-loading-ngmodules\n - guide/module-types\n - guide/router\n - guide/testing\n - guide/universal\n - guide/upgrade\n - tutorial/toh-pt5\n - tutorial/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - api/core/Directive\n - api/router\n - api/router/NavigationExtras#queryParamsHandling\n - api/router/Router#createUrlTree\n - api/router/RouterLink#description\n - api/router/RouterLink#fragment\n - api/router/RouterLink#onClick\n - api/router/RouterLink#onclick\n - api/router/RouterLink#preserveFragment\n - api/router/RouterLink#preserveQueryParams\n - api/router/RouterLink#queryParams\n - api/router/RouterLink#queryParamsHandling\n - api/router/RouterLink#replaceUrl\n - api/router/RouterLink#routerLink\n - api/router/RouterLink#routerlink\n - api/router/RouterLink#selectors\n - api/router/RouterLink#skipLocationChange\n - api/router/RouterLink#urlTree\n - api/router/RouterLink#属性\n - api/router/RouterLink#方法\n - api/router/RouterLink#输入参数\n - api/router/RouterLinkWithHref\n - api/router/RouterLinkWithHref#preserveQueryParams\n - api/router/UrlTree\n - https://github.com/angular/angular/edit/master/packages/router/src/directives/router_link.ts?message=docs(router)%3A%20describe%20your%20change...#L18-L213\n - https://github.com/angular/angular/edit/master/packages/router/src/directives/router_link.ts?message=docs(router)%3A%20describe%20your%20change...#L192-L201\n - https://github.com/angular/angular/tree/6.1.0/packages/router/src/directives/router_link.ts#L18-L213\n - https://github.com/angular/angular/tree/6.1.0/packages/router/src/directives/router_link.ts#L192-L201\n-->"
}